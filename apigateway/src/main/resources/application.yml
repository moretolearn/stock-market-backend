server:
  port: 8083

spring:
  profiles: default
  application:
    name: apigateway
  cloud:
    loadbalancer:
      retry:
        enabled: true  

zuul:
  prefix: /api/v1
  routes:
    commandservice:
      path: /command/**
      sensitiveHeaders:
      serviceId: commandservice
    queryservice:
      path: /query/**
      sensitiveHeaders:
      serviceId: queryservice
    authservice:
      path: /auth/**
      sensitiveHeaders:
      serviceId: authservice  
  host:
    connect-timeout-millis: 10000   
    socket-timeout-millis: 1000000
 

ribbon:
  eager-load:
    enabled: true
    clients: commandservice, queryservice, authservice
  eureka:
    enabled: true      
  ReadTimeout: 246000
  Connection-timeout: 246000


commandservice:
  ribbon:  
    ActiveConnectionsLimit: 500
    listOfServers: http://localhost:8081
    ReadTimeout: 246000
    Connection-timeout: 246000
queryservice:
  ribbon:  
    ActiveConnectionsLimit: 500
    listOfServers: http://localhost:8082
    ReadTimeout: 246000
    Connection-timeout: 246000
authservice:
  ribbon:  
    ActiveConnectionsLimit: 500  
    listOfServers: http://localhost:9191      
    ReadTimeout: 246000
    Connection-timeout: 246000    
        
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: false
        isolation:
          thread:
            timeoutInMilliseconds: 1000000
          strategy: THREAD           
      

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    preferIpAddress: true
    lease-renewal-interval-in-seconds: 30
    
---

server:
  port: 8083

spring:
  profiles: docker
  application:
    name: apigateway
  cloud:
    loadbalancer:
      retry:
        enabled: true  

zuul:
  prefix: /api/v1
  routes:
    commandservice:
      path: /command/**
      sensitiveHeaders:
      serviceId: commandservice
    queryservice:
      path: /query/**
      sensitiveHeaders:
      serviceId: queryservice
    authservice:
      path: /auth/**
      sensitiveHeaders:
      serviceId: authservice  
  host:
    connect-timeout-millis: 10000   
    socket-timeout-millis: 1000000    
 

ribbon:
  eager-load:
    enabled: true
    clients: commandservice, queryservice
  eureka:
    enabled: true    
  ReadTimeout: 246000
  Connection-timeout: 246000

#commandservice:
#  ribbon:  
#    ActiveConnectionsLimit: 500
#    
#queryservice:
#  ribbon:  
#    ActiveConnectionsLimit: 500    
            
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 494000   
          strategy: THREAD           
      

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://sm-registry:8761/eureka/
  instance:
    preferIpAddress: true
    lease-renewal-interval-in-seconds: 30    
    